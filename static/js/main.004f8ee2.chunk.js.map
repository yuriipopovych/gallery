{"version":3,"sources":["Components/SearchForm/SearchForm.js","Components/SearchBar/SearchBar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Services/imgApi.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","fetchPictures","className","onSubmit","this","type","onChange","autoComplete","placeholder","Component","SearchBar","ImageGalleryItem","pictures","map","picture","src","webformatURL","name","id","alt","largeImageURL","ImageGallery","openModal","onClick","Button","searchQuery","page","axios","get","then","response","data","hits","Modal","handleDidMount","code","closeModalByEsc","window","addEventListener","removeEventListener","closeModal","imgSrc","App","error","loading","imgApi","prevState","catch","finally","handleSearchFormInput","query","console","log","prevProps","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.004f8ee2.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport './SearchForm.css';\r\n\r\nexport default class SearchForm extends Component {\r\n    state = {\r\n        inputValue: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({inputValue: e.target.value})\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.fetchPictures(this.state.inputValue);\r\n        this.setState({inputValue: ''})\r\n     }\r\n    render() {\r\n        return (\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Search images and photos\"\r\n            />\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\n\r\nexport default function SearchBar({fetchPictures}) {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <SearchForm fetchPictures={fetchPictures}></SearchForm>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './ImageGalleryItem.css';\r\n\r\nexport default function ImageGalleryItem({pictures}) {\r\n    return (\r\n        <>\r\n            {pictures.map(picture =>\r\n                <li className=\"ImageGalleryItem\" key={picture.id}>\r\n                    <img src={picture.webformatURL} key={picture.id} name={ picture.id} alt={picture.largeImageURL} className=\"ImageGalleryItem-image\" />\r\n                </li>)}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './ImageGallery.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport default function ImageGallery({pictures, openModal}) {\r\n    return (\r\n        <ul className=\"ImageGallery\" onClick={openModal}>\r\n            <ImageGalleryItem pictures={pictures}></ImageGalleryItem>\r\n        </ul>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Button.css'\r\n\r\nexport default function Button({onClick}) {\r\n    return (\r\n        <>\r\n            <button type='button' className='Button' onClick={onClick}>Load more</button>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst fetchImgWithQuery = (searchQuery, page) => {\r\n    return axios\r\n        .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=22355356-a5efa6707afd0b81919f5aa7a&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(response => response.data.hits);\r\n}\r\n\r\nexport default {\r\n    fetchImgWithQuery,  \r\n}","// import React from 'react';\r\n// import './Modal.css'\r\n\r\n// export default function Modal({imgSrc, closeModal, closeModalByEsc}) {\r\n//     return (\r\n//         <div className=\"Overlay\" onClick={closeModal}>\r\n//             <div className=\"Modal\">\r\n//                 <img src={imgSrc} alt=\"\" />\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\nimport React, { Component } from 'react'\r\nimport './Modal.css'\r\n\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleDidMount)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleDidMount)\r\n    }\r\n    handleDidMount = (e) => {\r\n        if (e.code === 'Escape') {\r\n                this.props.closeModalByEsc();\r\n            }\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n             <div className=\"Overlay\" onClick={this.props.closeModal}>\r\n             <div className=\"Modal\">\r\n                 <img src={this.props.imgSrc} alt=\"\" />\r\n             </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport './App.css';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Button from './Components/Button/Button';\nimport imgApi from './Components/Services/imgApi';\nimport Modal from './Components/Modal/Modal';\n\n\nexport default class App extends Component {\n  state = {\n    pictures: [],\n    error: null,\n    loading: false,\n    searchQuery: '',\n    page: 1,\n    imgSrc: null\n  }\n  componentDidMount() {\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchPictures()\n    }\n  }\n\n  fetchPictures = () => {\n    const { searchQuery, page } = this.state;\n    imgApi\n      .fetchImgWithQuery(searchQuery, page)\n      .then(pictures => this.setState(prevState => ({pictures: [...prevState.pictures, ...pictures], page: prevState.page+1})))\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({loading: false}));\n  }\n\n  handleSearchFormInput = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      pictures: []\n    })\n  }\n  openModal = (e) => {\n    this.setState({\n      imgSrc: e.target.alt\n    })\n  }\n  closeModal = (e) => {\n    console.log(e.target)\n    if (e.target.src !== this.state.imgSrc) {\n      this.setState({\n      imgSrc: null\n    })\n    }\n  }\n  closeModalByEsc = () => {\n    this.setState({\n      imgSrc: null\n    })\n  }\n  \n  \n  \n  render() {\n    const {  error} = this.state;\n    return (\n      <div>\n        {error && <div>Something went wrong:(</div>}\n        {/* {this.state.pictures.map(picture => <img src={picture.largeImageURL}></img>)} */}\n        <SearchBar fetchPictures={this.handleSearchFormInput}></SearchBar>\n        {this.state.pictures.length > 0 && <ImageGallery pictures={this.state.pictures} openModal={this.openModal}></ImageGallery>}\n        {this.state.pictures.length > 0 && <Button onClick={this.fetchPictures}></Button>}\n        {this.state.imgSrc && <Modal imgSrc={this.state.imgSrc} closeModal={this.closeModal} closeModalByEsc={this.closeModalByEsc}></Modal> }\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}